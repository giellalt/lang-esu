! LANGUAGE: "esu"
! AUTHOR: "Lonny Strunk"

Alphabet
    a c e g i k l m n p q r s t u v w y m̄ n̄
    vv ll ss gg rr ng n͞g u͡g u͡gg u͡r u͡rr
    k̲:k q̲:q g̲:g r̲:r g̲g̲:gg r̲r̲:rr                 ! for -velar postbase assimilation
    %[e%] %[e%]:e                               ! HBC/Nun: initial e is not weak
    ʼ                                           ! Keep apostrophe from lexical entries
    ạ ụ ġ                                       ! for (ar) droppping ; for vowel dropping in connective moods ending in a vowel ; ya(g)ar*

    ! All operators and allomorph operators map to morpheme segmenter 
    %(e%):%> %(g%):%> %(r%):%> %(s%):%> %(t%):%> %(u%):%>
    %(ar%):%> %(ar%*%):%> %(ng%):%> ! %(ur%):%> %(aa%):%> %(a%):%>
    %(g%/t%):%> %(r%/l%):%> %(u%/i%):%>

    %+:%> %–:%> %~:%> %%:%> %::%> %':%> %.:%> %*:%> %°:%>
    %@¹:%> %@²:%> %@³:%> %@⁴:%> %@⁵:%> %@ˡ:%> %@ˁ:%> %@ʸ:%> %@:%>  
    %=; 

Sets 
    Bndry = %+ %– %~ %% %: %' %. %* %° 
        %@¹ %@² %@³ %@⁴ %@⁵ %@ˡ %@ˁ %@ʸ %@
        %(a%) %(e%) %(g%) %(r%) %(s%) %(t%) %(u%)
        %(aa%) %(ar%) %(ar%*%) %(ng%) %(ur%) %(g%/t%) %(r%/l%) %(u%/i%) ;
    AtSign = %@¹ %@² %@³ %@⁴ %@⁵ %@ˡ %@ˁ %@ʸ %@ ;

    Stop = p t c k q k̲ q̲ ;
    VoiceFric = v l s g r u͡g u͡r g̲ r̲ ġ ; 
    VlessFric = vv ll ss gg rr u͡gg u͡rr g̲g̲ r̲r̲ ;
    VoiceNasal = m n ng ;
    VlessNasal = m̄ n̄ n͞g ;

    VoiceCon = VoiceFric VoiceNasal ;
    VlessCon = VlessFric VlessNasal Stop ;

    Fric = VoiceFric VlessFric ;
    Nasal = VoiceNasal VlessNasal ;

    Con = Stop Fric Nasal w y ;

    FVow = a i u ạ ụ ;
    Vow = FVow e ;

Rules 

"a:0 = --"
a:0 <=> _ Con:0 (%*:) %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"a:i = age/ii | aga/ii | anga/ii | aga/ii | enga/ii"
a:i <=> [:Con|.#.] _ g: %%: %:: %(e%):i Con: ; ! ag%:(e) -> ii 
        [:Con|.#.] _ g: %:: (%~:) (%(ng%):) [a:|ạ:] [Bndry:|Con:|.#.] ; ! ag:(~)(ng)a -> ii ; ag:a -> ii
        [:Con|.#.] _ %:: [ng:|%(ng%):] [a:|ạ:] [Bndry:|Con:|.#.] ; ! a:nga -> ii ; a:(ng)a -> ii

        [:Con|.#.] [a:|ạ:] g: %:: (%~:) (%(ng%):) _ [Bndry:|Con:|.#.] ; ! ag:(ng)a -> ii ; ag:a -> ii
        [:Con|.#.] [a:|ạ:|e:] %:: [ng:|%(ng%):] _ [Bndry:|Con:|.#.] ; ! a:nga -> ii ; a:(ng)a -> ii ; e:(ng)a -> ii

    except
        _ Con:0 (%*:) %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"ạ:0 = --"
ạ:0 <=> _ Con:0 (%*:) %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"ạ:i = age/ii | aga/ii | anga/ii | aga/ii | enga/ii"
ạ:i <=> [:Con|.#.] _ g: %%: %:: %(e%):i Con: ; ! ag%:(e) -> ii 
        [:Con|.#.] _ g: %:: (%~:) (%(ng%):) [a:|ạ:] [Bndry:|Con:|.#.] ; ! ag:(ng)a -> ii ; ag:a -> ii
        [:Con|.#.] _ %:: [ng:|%(ng%):] [a:|ạ:] [Bndry:|Con:|.#.] ; ! a:nga -> ii ; a:(ng)a -> ii

        [:Con|.#.] [a:|ạ:] g: %:: (%~:) (%(ng%):) _ [Bndry:|Con:|.#.] ; ! ag:(ng)a -> ii ; ag:a -> ii
        [:Con|.#.] [a:|ạ:|e:] %:: [ng:|%(ng%):] _ [Bndry:|Con:|.#.] ; ! a:nga -> ii ; a:(ng)a -> ii ; e:(ng)a -> ii
    except
        _ Con:0 (%*:) %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"e:0 = ~ | word# | eVowPostbase | semifinaleVowPostbase | (e):e | -- | te@ "
e:0 <=> _ [ Bndry: - %': - %(r%): ]* %~: ; ! "Rule for Tilde"
        :Vow [Bndry:%>|:0]* t:n _ [ .#. | %= ] ; ! "Word final Vte -> e:0"
        _ Bndry:+ :Vow ; ! "vowel postbases are e deleters" "(u):u"
        .#. ~[ :* :Con :VlessCon] _ [ r | g ] [ Bndry: - %(t%): - %(g%/t%): ]+ :Vow ; ! "vowel postbases are semi-final e deleters" "(u):u"   !maybe ~[:Con :VlessCon] for amlleret ? 
        [[Vow Con]|[Con VoiceCon]] _ [ r | g ] Bndry:* %%:%> Bndry:* %(e%):e ; ! "Rule (e):e"
        _ (Con:0) Bndry:* %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also
        t: _ [Bndry:-AtSign:]* AtSign: ; ! te@
    except
        [:Con|.#.] _ %:: [ng:|%(ng%):] [i:|u:] [Bndry:|Con:|.#.] ; ! e:(ng)i -> ai ; e:(ng)u -> au
        [:Con|.#.] _ %:: [ng:|%(ng%):] [a:|ạ:] [Bndry:|Con:|.#.] ; ! e:(ng)a -> ii

"e:a = e^a | engi/ai"
e:a <=> _ [ .#. | %= ] ; ! "Word final e:a"
        [:Con|.#.] _ %:: [ng:|%(ng%):] [i:|u:] [Bndry:|Con:|.#.] ; ! e:(ng)i -> ai ; e:(ng)u -> au
    except
        :Vow [Bndry:%>|:0]* t:n _ [ .#. | %= ] ; ! "Word final Vte -> e:0"

"e:i = enga/ii"
e:i <=> [:Con|.#.] _ %:: [ng:|%(ng%):] [a:|ạ:] [Bndry:|:Con|.#.] ; ! e:(ng)a -> ii

"g:0 = - | :"
g:0 <=> _ Bndry:* %–: ; ! Rule for Minus - drop consonant ending base
        [:Con|.#.] FVow: _ %%: %:: %(e%): Con: ; ! ag%:(e) -> ii
        [:Con|.#.] FVow: _ [%@³:|%~:] %:: %(u%): Con: ; ! ag@³:(u) -> au
        [:Con|.#.] FVow: _  %:: %(u%/i%): Con: ; ! ag:(u/i) -> au
        [:Con|.#.] [Bndry:|:0]* FVow: %:: _ FVow: [Bndry:|Con:|.#.] ; ! a:gu -> au
        [:Con|.#.] FVow: _ %:: FVow: [Bndry:|Con:|.#.] ; ! ag:a -> ii
        [:Con|.#.] FVow: _ %:: (%~:) %(ng%): FVow: [Bndry:|Con:|.#.] ; ! Vg:(~)(ng)V -> VV

"g̲:r = Uvular/VelarAgreement"
g̲:r <=> [r:0|rr:0] Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"g:k = word#"
g:k <=> _ [ .#. | %= ] ; ! Word Final changes

"gg:g = gte@(u)"
gg:g <=> _ t:0 e:0 (%°:) [Bndry:-AtSign:]* %@³: ; ! CCte@³(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"g̲g̲:rr = Uvular/VelarAgreement"
g̲g̲:rr <=> [r:0|rr:0] Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"i:0 = --"
i:0 <=> _ Con:0 Bndry:* %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"k̲:q = Uvular/VelarAgreement"
k̲:q <=> [r:0|rr:0] Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"l:0 = --" ! - optional drop preceding vowel also
l:0 => Vow:0 (Con:0) Bndry:* %–: %–: _ ; ! Rule for Double Minus - 

"l:ll = te@ˡl/ll"
l:ll <=> t:0 (ʼ) e:0 (%°:) [Bndry:-AtSign:-%(r%):]* %@ˡ: [Bndry:-AtSign:-%(r%):]* _ ; ! te@ˡl/ll  -(r) for qimugterluni

"ll:l = lte@(u)"
ll:l <=> _ t:0 e:0 (%°:) [Bndry:-AtSign:]* %@³: ; ! CCte@³(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"m:m̄ = @²m"
m:m̄ <=> Con t:0 e:0 [Bndry:-%°:-AtSign:]* %@²: Bndry:* _ ; ! Cte@²m/Cm̄

"n:n̄ = @¹n"
n:n̄ <=> Con t:0 e:0 (%°:) [Bndry:-AtSign:]* %@¹: [Bndry:-AtSign:]* _ ; ! Cte@¹n/Cn̄

"ng:0 = :"
ng:0 <=> [:Con|.#.] [Bndry:|:0]* FVow: %:: _ FVow: [Bndry:|Con:|.#.] ; ! u:nga -> ua ; a:nga -> ii
    except
         Con t:0 e:0 [Bndry:-%°:-AtSign:]* %@²: [Bndry:-AtSign:]* _ ; ! Cte@²ng/Cn͞g

"ng:n͞g = @²ng"
ng:n͞g <=> Con t:0 e:0 [Bndry:-%°:-AtSign:]* %@²: [Bndry:-AtSign:]* _ ; ! Cte@²ng/Cn͞g

"q̲:k = Uvular/VelarAgreement"
q̲:k <=> g:0 Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"r:0 = - | % | :"
r:0 <=> _ Bndry:* %–: ; ! Rule for Minus - drop consonant ending base
        FVow _ [Bndry: - %*:]* %%:0 ; ! Rule for Percent
        [:Con|.#.] FVow: _ %*: %%: %:: %(e%): Con: ; ! ar*%:(e) -> aa
        [:Con|.#.] FVow: _ [%@³:|%~:] %:: %(u%): Con: ; ! ar@³:(u) -> au
        [:Con|.#.] FVow: _  %:: %(u%/i%): [Con:] ; ! ar:(u/i) -> au
        [:Con|.#.] [Bndry:|:0]* FVow: %:: _ FVow: [Bndry:|Con:|.#.] ; ! i:ru -> iu
        [:Con|.#.] [Bndry:|:0]* FVow: _ %:: FVow: [Bndry:|Con:|.#.] ; ! ar:a -> aa
        [:Con|.#.] FVow: _ (%*:) %:: (%~:) %(ng%): FVow: [Bndry:|Con:|.#.] ; ! ar(*):(~)(ng)a -> ii

"r̲:g = Uvular/VelarAgreement"
r̲:g <=> g:0 Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"r:q = word#"
r:q <=> _ (%*:) [ .#. | %= ] ; ! Word Final changes

"rr:0 = -"
rr:0 <=> _ Bndry:* %–: ; ! Rule for Minus - drop consonant ending base

"r̲r̲:gg = Uvular/VelarAgreement"
r̲r̲:gg <=> g:0 Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"rr:r = rte@(u)"
rr:r <=> _ t:0 e:0 (%°:) [Bndry:-AtSign:]* %@³: ; ! CCte@³(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"s:0 = te~s/c | (t)s/c"
s:0 <=> t:c (ʼ) e:0 Bndry:* _ ; ! te~s/c
        %(t%):c Bndry:* _ ; ! (t)s/c

"ss:s = ste@(u)"
ss:s <=> _ t:0 e:0 (%°:) [Bndry:-AtSign:]* %@³: ; ! CCte@³(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"t:0 = Cte@¹n/CCn̄ | Cte@²mngv/CCm̄n͞gvv | Cte@³(u)/Cu"
t:0 <=> Con _ e: (%°:) [Bndry:-AtSign:]* %@¹: ; ! Cte@¹n/CCn̄
        Con _ e: (%°:) [Bndry:-AtSign:]* %@²: ; ! Cte@²mngv/CCm̄n͞gvv
        VlessFric:VoiceFric _ e: (%°:) [Bndry:-AtSign:]* %@³: ; ! Cte@³(u)/Cu
        _ (ʼ) e: (%°:) [Bndry:-AtSign:]* %@⁵: ;
        _ (ʼ) e: (%°:) [Bndry:-AtSign:-%(r%):]* %@ˡ: ;

"t:c = tV--li/ci | te@y/c | te~s/c" 
t:c <=> _ Vow:0 (Con:0) [Bndry:-%(u%):-AtSign:]* %–: %–: l:0 i ; ! te--li/ci
        _ (ʼ) e:0 [Bndry:-%(u%):-%(ng%):-AtSign:]* i ; ! te~i/ci
        _ (ʼ) e: (%°:) %:: %(u%/i%): m: ; ! te:(u/i)/ci
        _ (ʼ) e: (%°:) [Bndry:-%(u%):-AtSign:]* %@ʸ: [Bndry:-%(u%):-AtSign:]* y: ; ! te@y/c
        _ (ʼ) e: [Bndry:-%(u%):-AtSign:]* [s:|y:] ; ! te~s/c

"t:l = Vte@²/l | te*@³(u)/l | te°@⁴gkng/l"
t:l <=> Vow _ (ʼ) e: %°: [Bndry:-AtSign:]* %@²: ; ! Vte°@²mngv/l
        Vow _ (ʼ) e: %°: [Bndry:-AtSign:]* %@³: ; ! Vte°@³(u)/l
        _ (ʼ) e: %°: [Bndry:-AtSign:]* %@⁴: ; ! te°@⁴gkng/l

"t:n = WordFinalVte"
t:n <=> :Vow [Bndry:%>|:0]* _ e: [ .#. | %= ] ; ! Word final Vte

"t:q = te@ˁ/q"
t:q <=> _ (ʼ) e: (%°:) [Bndry:-AtSign:]* %@ˁ: ; ! te@ˁ/q

"t:s = Vte@²/s | Vtʼe@³(u)/sʼu | Cte@⁴gkng/s"
t:s <=> Vow _ (ʼ) e: [Bndry:-%°:-AtSign:]* %@²: ; ! Vte@²mngv/s
        Vow _ ʼ e: [Bndry:-%°:-AtSign:]* %@³: ; ! Vtʼe@³(u)/sʼu
        [Vow|VlessFric:VoiceFric|Nasal|Stop] _ (ʼ) e: [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"t:y = Vte@³(u)/Vy"
t:y <=> 
!        Vow _ (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@²: ; ! Vte@²mngv/y  (for HBC)
        [Vow|Nasal|Stop] _ e: [Bndry:-%°:-AtSign:]* %@³: ; ! Vte@³(u)/Vy    TODO: Add t'e/y' also for HBC
!        [Vow|VlessFric:VoiceFric|Nasal|Stop] _ (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/y for HBC  

"u:0 = --"
u:0 <=> _ Con:0 Bndry:* %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"u͡gg:u͡g = u͡gte@(u)"
u͡gg:u͡g <=> _ t:0 e:0 (%°:) [Bndry:-AtSign:]* %@³: ; ! CCte@³(u)/Cu
           _ t:s (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"u͡rr:u͡r = u͡rte@(u)"
u͡rr:u͡r <=> _ t:0 e:0 (%°:) [Bndry:-AtSign:]* %@³: ; ! CCte@³(u)/Cu
           _ t:s (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"v:vv = @²v"
v:vv <=> Con t:0 e:0 [Bndry:-%°:-AtSign:]* %@²: [Bndry:-AtSign:]* _ ; ! Cte@²v/Cvv

"vv:v = vte@(u)"
vv:v <=> _ t:0 e:0 (%°:) [Bndry:-AtSign:]* %@³: ; ! CCte@³(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%°:-AtSign:]* %@⁴: ; ! Cte@⁴gkng/s

"y:0 = te@y"
y:0 <=> t:c (ʼ) e:0 (%°:) [Bndry:-%(u%):-AtSign:]* %@ʸ: [Bndry:-%(u%):-AtSign:]* _ ; ! te@y/c
        t:c (ʼ) e:0 (%°:) [Bndry:-%(u%):-AtSign:]* _ ; ! tey/c
        %(t%):c Bndry:* _ ; ! (t)y/c

"y:s = Stop@y" 
y:s <=> [VlessCon-t] (e:0) [Bndry:-AtSign:]* %@ʸ: [Bndry:-AtSign:]* _ ; ! Stop@y/s
        [VlessCon-t] (e:0) [Bndry:-AtSign:]* _ ; ! Stopy/s
    except
        t:c (ʼ) e:0 (%°:) [Bndry:-AtSign:]* %@ʸ: [Bndry:-AtSign:]* _ ; ! te@y/c
        t:c (ʼ) e:0 (%°:) [Bndry:-%(u%):-AtSign:]* _ ; ! tey/c
        %(t%):c Bndry:* _ ; ! (t)y/c

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!     ALLOMORPHS    !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

"(e):a = %/:" ! - bases kept with percent and dropped by colon
%(e%):a <=> [:Con|.#.] [a:|ạ:] r: (%*:) %%:%> %:: _ [Con:] ; ! ar*e -> aa

"(e):e = VV[r/g]%e | e:0%e"
%(e%):e <=> :FVow :FVow [ r | g ] (%*:) %%:   %:: _ ;
                     e: [ r | g ] (%*:) %%:%> %:: _ ;
    except
        [:Con|.#.] [a:|ạ:] r: (%*:) %%:%> %:: _ [Con:] ; ! ar*e -> aa
        [:Con|.#.] [a:|ạ:] g: (%*:) %%:%> %:: _ [Con:] ; ! age -> ii
        [:Con|.#.] i: [g:|r:] (%*:) %%:%> %:: _ [Con:] ; ! ige/ir*e -> ii
        [:Con|.#.] u: [g:|r:] (%*:) %%:%> %:: _ [Con:] ; ! uge/ur*e -> uu

"(e):i = age/ii"
%(e%):i <=> [:Con|.#.] [a:|ạ:] g: (%*:) %%:%> %:: _ [Con:] ; ! age -> ii
            [:Con|.#.] i: [g:|r:] (%*:) %%:%> %:: _ [Con:] ; ! ige/ir*e -> ii

"(e):u = %/:" ! - bases kept with percent and dropped by colon
%(e%):u <=> [:Con|.#.] u: [g:|r:] (%*:) %%:%> %:: _ [Con:] ; ! uge/ur*e -> uu

"(g):g = VVFinalBase"
%(g%):g <=> :Vow [:%>|:0]* :Vow [:%>|:0]* _ ;

"(g/t):g = VVFinalBase"
%(g%/t%):g <=> :Vow [:%>|:0]* :Vow [:%>|:0]* _ ;
    except
        :Con Bndry:* _ ; ! CFinalBase

"(g/t):t = CFinalBase"
%(g%/t%):t <=> :Con Bndry:* _ ; ! CFinalBase

"(ng):ng = VFinalBase"
%(ng%):ng <=> Vow: Bndry:* _ ;
    except
        [:Con|.#.] Vow: %:: _ FVow: [Bndry:|Con:|.#.] ; ! CV:(ng)VC -> CVVC
        [:Con|.#.] FVow: %:: %~: _ FVow: [Bndry:|Con:|.#.] ; ! CFV:~(ng)VC -> CVVC

"(ng):0 = :" ! - bases that get added then dropped after single vowel
%(ng%):0 <=> [:Con|.#.] Vow: %:: _ FVow: [Bndry:|Con:|.#.] ; ! CV:(ng)VC -> CVVC
             [:Con|.#.] FVow: %:: %~: _ FVow: [Bndry:|Con:|.#.] ; ! CFV:~(ng)VC -> CVVC

"(r):r = te Bases"
%(r%):r <=> :t :e %+: _ ; ! bases ending in te

"(s):s = VFinalBase"
%(s%):s <=> Vow: Bndry:* _ ; ! bases ending in a vowel

"(t):t = CFinalBase"
%(t%):t <=> :Con Bndry:* _ ; ! CFinalBase
    except
        :Con Bndry:* _ Bndry:* [s:|y:] ; ! (t)[sy]/c

"(t):c = (t)s/c"
%(t%):c <=> :Con Bndry:* _ Bndry:* [s:|y:] ; ! (t)[sy]/c

"(u):u = notFVow"
%(u%):u <=> [Con:|e:] Bndry:* _ ; ! notFVow = Con|e

"(u/i):i = te:(u/i)/ci"
%(u%/i%):i <=> t:c (ʼ) e: (%°:) %:: _ ; ! te:(u/i)/ci

"(u/i):u = [Con|e-te]:(u/i)/Cu"
%(u%/i%):u <=> \:FVow %:: _ ; ! [Con|e-te]:(u/i)/Cu
    except
        t:c (ʼ) e: (%°:) %:: _ ; ! te:(u/i)/ci

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!     OPERATOR      !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! "Rule for Plus" - useless
! "Rule for Period" - useless

"%:0 = percentWeak" ! percent weak
%%:0 <=> FVow: r: [Bndry:-%*:]* _ ;

"':ʼ = ApostropheRule"
%':%ʼ <=> .#. (Con) Vow Con e:0 [ Bndry: - %~: ]* _ ; ! "Rule for Apostrophe - short bases"


