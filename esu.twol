! LANGUAGE: "esu"
! AUTHOR: "Lonny Strunk"

Alphabet
    a c e g i k l m n p q r s t u v w y ḿ ń
    vv ll ss gg rr ng ńg u͡g u͡gg u͡r u͡rr
    k̲:k q̲:q g̲:g r̲:r g̲g̲:gg r̲r̲:rr
    %[e%] %[e%]:e                               ! HBC/Nun: initial e is not weak
    ʼ                                           ! Keep apostrophe from lexical entries
    
    ! All operators and allomorph operators map to morpheme segmenter 
    %(a%):%> %(e%):%> %(g%):%> %(i%):%> %(l%):%> %(r%):%> %(s%):%> %(t%):%> %(u%):%> 
    %(aa%):%> %(ar%):%> %(ar%*%):%> %(ng%):%> %(ur%):%>
    ! %(g%/t%):%> %(r%/l%):%> %(u%/i%):%>

    %+:%> %–:%> %~:%> %%:%> %::%> %':%> %.:%> %*:%> %°:%> 
    %@¹:%> %@²:%> %@³:%> %@⁴:%> %@⁵:%> %@ˡ:%> %@ˁ:%> %@ʸ:%> %@:%>  
    %= ; 

Sets 
    Bndry = %+ %– %~ %% %: %' %. %* %° 
        %@¹ %@² %@³ %@⁴ %@⁵ %@ˡ %@ˁ %@ʸ %@
        %(a%) %(e%) %(g%) %(r%) %(s%) %(t%) %(u%)
        %(aa%) %(ar%) %(ar%*%) %(ng%) %(ur%) %(g%/t%) %(r%/l%) %(u%/i%) ;
    AtSign = %@¹ %@² %@³ %@⁴ %@⁵ %@ˡ %@ˁ %@ʸ %@ ;

    Stop = p t c k q k̲ q̲ ;
    VoiceFric = v l s g r u͡g u͡r g̲ r̲ ; 
    VlessFric = vv ll ss gg rr u͡gg u͡rr g̲g̲ r̲r̲ ;
    VoiceNasal = m n ng ;
    VlessNasal = ḿ ń ńg ;

    VoiceCon = VoiceFric VoiceNasal ;
    VlessCon = VlessFric VlessNasal Stop ;

    Fric = VoiceFric VlessFric ;
    Nasal = VoiceNasal VlessNasal ;

    Con = Stop Fric Nasal w y ;

    FVow = a i u ;
    Vow = FVow e ;

Rules 

"a:0 = --"
a:0 <=> _ Con:0 Bndry:* %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also
    except
        _ g:0 Bndry:* %(e%):i ; ! age -> ii 
        _ g:0 Bndry:* a:i ; ! aga -> ii 
        _ Bndry:* [ g:0 | %(ng%):0 ] Bndry:* a:i ; ! anga, aga -> ii
        a:i Bndry:* [ g:0 | %(ng%):0 ] Bndry:* _ ; ! anga, aga -> ii
        e:i Bndry:* %(ng%):0 Bndry:* _ ; ! enga -> ii

"a:i = age/ii | aga/ii | anga/ii | aga/ii | enga/ii"
a:i <=> _ g:0 Bndry:* %(e%):i ; ! age -> ii 
        _ g:0 Bndry:* a:i ; ! aga -> ii 
        _ Bndry:* [ g:0 | %(ng%):0 ] Bndry:* a:i ; ! anga, aga -> ii
        a:i Bndry:* [ g:0 | %(ng%):0 ] Bndry:* _ ; ! anga, aga -> ii
        e:i Bndry:* %(ng%):0 Bndry:* _ ; ! enga -> ii

"e:0 = ~ | word# | eVowPostbase | semifinaleVowPostbase | (e):e | -- | te@ "
e:0 <=> _ [ Bndry: - %': ]* %~: ; ! "Rule for Tilde"
        Vow t:n _ [ .#. | %= ] ; ! "Word final Vte -> e:0"
        _ [ Bndry: - %~: ]+ :Vow ; ! "vowel postbases are e deleters"
        _ [ r | g ] Bndry:+ :Vow ; ! "vowel postbases are semi-final e deleters"
        [[Vow Con]|[Con VoiceCon]] _ [ r | g ] Bndry:* %%:0 Bndry:* %(e%):e ; ! "Rule (e):e"
        _ (Con:0) Bndry:* %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also
        [t:-t] _ Bndry:* AtSign: ; ! te@
    except
        _ Bndry:* %(ng%):0 Bndry:* a:i ; ! enga -> ii
        _ Bndry:* %(ng%):0 Bndry:* i ; ! engi -> ai

"e:a = e^a | engi/ai"
e:a <=> _ [ .#. | %= ] ; ! "Word final e:a"
        _ Bndry:* %(ng%):0 Bndry:* i ; ! engi -> ai
    except
        Vow t:n _ [ .#. | %= ] ; ! "Word final Vte -> e:0"

"e:i = enga/ii"
e:i <=> _ Bndry:* %(ng%):0 Bndry:* a:i ; ! enga -> ii

"g:0 = - | :"
g:0 <=> _ Bndry:* %–: ; ! Rule for Minus - drop consonant ending base
        [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* _ [[Bndry:|:0]-e:0]* %:: [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon
        [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* %:: [Bndry:|:0]* _ [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon

"g̲:r = Uvular/VelarAgreement"
g̲:r <=> [r:0|rr:0] Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"g:k = word#"
g:k <=> _ [ .#. | %= ] ; ! Word Final changes

"gg:g = gte@(u)"
gg:g <=> _ t:0 e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! CC:Cte@(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s

"g̲g̲:rr = Uvular/VelarAgreement"
g̲g̲:rr <=> [r:0|rr:0] Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"i:0 = --"
i:0 <=> _ Con:0 Bndry:* %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"k̲:q = Uvular/VelarAgreement"
k̲:q <=> [r:0|rr:0] Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"l:0 = --" ! - optional drop preceding vowel also
l:0 => Vow:0 (Con:0) Bndry:* %–: %–: _ ; ! Rule for Double Minus - 

"ll:l = lte@(u)"
ll:l <=> _ t:0 e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! CC:Cte@(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s

"ng:0 = :"
ng:0 <=> [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* _ [[Bndry:|:0]-e:0]* %:: [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon
         [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* %:: [Bndry:|:0]* _ [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon

"q̲:k = Uvular/VelarAgreement"
q̲:k <=> g:0 Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"r:0 = - | % | :"
r:0 <=> _ Bndry:* %–: ; ! Rule for Minus - drop consonant ending base
        FVow _ [Bndry: - %*:]* %%:%> ; ! Rule for Percent
        [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* _ [[Bndry:|:0]-e:0]* %:: [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon
        [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* %:: [Bndry:|:0]* _ [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon

"r̲:g = Uvular/VelarAgreement"
r̲:g <=> g:0 Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"r:q = word#"
r:q <=> _ (%*:) [ .#. | %= ] ; ! Word Final changes

"rr:0 = -"
rr:0 <=> _ Bndry:* %–: ; ! Rule for Minus - drop consonant ending base

"r̲r̲:gg = Uvular/VelarAgreement"
r̲r̲:gg <=> g:0 Bndry:* %–: Bndry:* _ ; ! Uvular/VelarAgreement

"rr:r = rte@(u)"
rr:r <=> _ t:0 e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! CC:Cte@(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s

"t:0 = te@c|p/0 | Cte@ng|v|m/0 | Cte@(u)/Cu"
t:0 <=> _ e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* [c|p] ; ! te@c|p/0
        Con _ e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* [ng|v|m] ; ! Cte@ng|v|m/0
        VlessFric:VoiceFric _ e:0 [Bndry:-%*:]* %@: Bndry:* %(u%):u ; ! Cte@(u)/Cu

"t:c = tV--li/ci | te@y/c | te~s/c" 
t:c <=> _ Vow:0 (Con:0) [Bndry:-%(u%):]* %–: %–: l:0 i ; ! te--li/ci
        _ (ʼ) e:0 [Bndry:-%(u%):]* i ; ! te~i/ci
        _ (ʼ) e:0 [Bndry:-%(u%):]* %@ʸ: [Bndry:-%(u%):]* y:0 ; ! te@y/c
        _ (ʼ) e:0 [Bndry:-%(u%):]* s:0 ; ! te~s/c

"t:l = te*@(u)"
t:l <=> _ e:0 %*: Bndry:* %@: Bndry:* %(u%): ; ! te*@(u)/lu

"t:n = WordFinalVte"
t:n <=> Vow _ e:0 [ .#. | %= ] ; ! Word final Vte

"t:s = te@k/s | Vte@ng|v|m/s | tʼe@(u)/sʼu "
t:s <=> [VlessFric:VoiceFric|Vow|Stop] _ (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s
        Vow _ (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* [ng|v|m] ; ! Vte@ng|v|m/s
        _ ʼ e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! tʼe@(u)/sʼu

"t:y = Vte@(u)/Vy"
t:y <=> [Vow|Stop] _ e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! Vte@(u)/Vyu

"s:0 = te~s/c | (t)s/c"
s:0 <=> t:c (ʼ) e:0 Bndry:* _ ; ! te~s/c
        %(t%):c Bndry:* _ ; ! (t)s/c

"ss:s = ste@(u)"
ss:s <=> _ t:0 e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! CC:Cte@(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s

"u:0 = --"
u:0 <=> _ Con:0 Bndry:* %–: %–: l:0 ; ! "Rule for Double Minus" ! - optional drop preceding vowel also

"u͡gg:u͡g = u͡gte@(u)"
u͡gg:u͡g <=> _ t:0 e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! CC:Cte@(u)/Cu
           _ t:s (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s

"u͡rr:u͡r = u͡rte@(u)"
u͡rr:u͡r <=> _ t:0 e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! CC:Cte@(u)/Cu
           _ t:s (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s

"vv:v = vte@(u)"
vv:v <=> _ t:0 e:0 [Bndry:-%*:]* %@: Bndry:* %(u%): ; ! CC:Cte@(u)/Cu
         _ t:s (ʼ) e:0 [Bndry:-%(u%):]* %@: [Bndry:-%(u%):]* k ; ! te@k/s

"y:0 = te@y"
y:0 <=> t:c (ʼ) e:0 (°) Bndry:* %@ʸ: Bndry:* _ ; ! te@y/c
        %(t%):c Bndry:* _ ; ! (t)y/c

"y:s = Stop@y" 
y:s <=> VlessCon (e:0) Bndry:* %@ʸ: Bndry:* _; ! Stop@y/s
    except
        t:c (ʼ) e:0 Bndry:* %@ʸ: Bndry:* _ ; ! te@y/c
        %(t%):c Bndry:* _ ; ! (t)y/c

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!     ALLOMORPHS    !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

"(e):e = VV[r/g]%e | e:0%e" ! - bases kept with percent
%(e%):e <=> FVow FVow [ r | g ] Bndry:* %%:0 Bndry:* _ ;
                  e:  [ r | g ] Bndry:* %%:0 Bndry:* _ ;

"(e):i = age/ii"
%(e%):i <=> a:i g:0 Bndry:* %%:0 Bndry:* _ ; ! age -> ii 

"(e):FV = %/:" ! - bases kept with percent and dropped by colon
%(e%):Vy <=> [:Con|.#.] Vx [ g:0 | r:0 ] Bndry:* %%:0 Bndry:* %:: Bndry:* _ Bndry:* [:Con|.#.] ;
    where Vx in ( a i u )
          Vy in ( a i u )
    matched ;

"(g):g = VVFinalBase"
%(g%):g <=> :Vow [:%>|:0]* :Vow [:%>|:0]* _ ;

"(ng):ng = VFinalBase"
%(ng%):ng <=> Vow: Bndry:* _ ;
    except
        [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* _ [Bndry:|:0]* %:: [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon
        [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* %:: [Bndry:|:0]* _ [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon

"(ng):0 = :" ! - bases that get added then dropped after single vowel
%(ng%):0 <=> [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* _ [Bndry:|:0]* %:: [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon
             [:Con|.#.] [Bndry:|:0]* :FVow [Bndry:|:0]* %:: [Bndry:|:0]* _ [Bndry:|:0]* :FVow [Bndry:|:0]* [:Con|.#.] ; ! Rule for Colon

"(s):s = VFinalBase"
%(s%):s <=> Vow: Bndry:* _ ; ! bases ending in a vowel

"(t):t = CFinalBase"
%(t%):t <=> Con Bndry:* _ ; ! CFinalBase
    except
        Con Bndry:* _ Bndry:* [s:0|y:0] ; ! (t)[sy]/c

"(t):c = (t)s/c"
%(t%):c <=> Con Bndry:* _ Bndry:* [s:0|y:0] ; ! (t)[sy]/c

"(u):u = notFVow"
%(u%):u <=> [Con:|e:] Bndry:* _ ; ! notFVow = Con|e

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!     OPERATOR      !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! "Rule for Plus" - useless
! "Rule for Period" - useless

"%:0 = percentNotUsedFlag" ! percent not used
%%:0 <=> g: Bndry:* _ ;
         e: r: Bndry:* _ ;
         r: %*: Bndry:* _ ;

"':ʼ = ApostropheRule"
%':%ʼ <=> .#. (Con) Vow Con e:0 [ Bndry: - %~: ]* _ ; ! "Rule for Apostrophe - short bases"


