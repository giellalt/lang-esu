! n u n a
! m a k u m i u
! t u m e:a
! a ng y a r:q
! n a y i r:q *:>
! k u i g:k
! q i m u g t e:a
! a ng u t:n e:0

! angute
! angun0

! echo "?* ;" | hfst-regexp2fst -o univ.hfst
! hfst-twolc -i esu.wordFinal.twol -o esu.wordFinal.hfst
! hfst-compose-intersect univ.hfst esu.wordFinal.hfst > esu.wordFinal.out.hfst
! echo "angute" | hfst-lookup esu.wordFinal.out.hfst

Alphabet
    a c e g i k l m n p q r s t u v w y m̄ n̄
    vv ll ss gg rr ng n͞g u͡g u͡gg u͡r u͡rr
    k̲:k q̲:q g̲:g r̲:r g̲g̲:gg r̲r̲:rr                 ! for -velar postbase assimilation
    %[e%] %[e%]:e                               ! HBC/Nun: initial e is not weak
    ʼ                                           ! Keep apostrophe from lexical entries
    ạ                                           ! for (ar) droppping

    ! All operators and allomorph operators map to morpheme segmenter 
    %(a%):%> %(e%):%> %(g%):%> %(i%):%> %(l%):%> %(r%):%> %(s%):%> %(t%):%> %(u%):%> 
    %(aa%):%> %(ar%):%> %(ar%*%):%> %(ng%):%> %(ur%):%>
    ! %(g%/t%):%> %(r%/l%):%> %(u%/i%):%>

    %+:%> %–:%> %~:%> %%:%> %::%> %':%> %.:%> %*:%> %°:%> 
    %@¹:%> %@²:%> %@³:%> %@⁴:%> %@⁵:%> %@ˡ:%> %@ˁ:%> %@ʸ:%> %@:%>  
    %=; 

Sets 
    Bndry = %+ %– %~ %% %: %' %. %* %° 
        %@¹ %@² %@³ %@⁴ %@⁵ %@ˡ %@ˁ %@ʸ %@
        %(a%) %(e%) %(g%) %(r%) %(s%) %(t%) %(u%)
        %(aa%) %(ar%) %(ar%*%) %(ng%) %(ur%) %(g%/t%) %(r%/l%) %(u%/i%) ;
    AtSign = %@¹ %@² %@³ %@⁴ %@⁵ %@ˡ %@ˁ %@ʸ %@ ;

    Stop = p t c k q k̲ q̲ ;
    VoiceFric = v l s g r u͡g u͡r g̲ r̲ ; 
    VlessFric = vv ll ss gg rr u͡gg u͡rr g̲g̲ r̲r̲ ;
    VoiceNasal = m n ng ;
    VlessNasal = m̄ n̄ n͞g ;

    VoiceCon = VoiceFric VoiceNasal ;
    VlessCon = VlessFric VlessNasal Stop ;

    Fric = VoiceFric VlessFric ;
    Nasal = VoiceNasal VlessNasal ;

    Con = Stop Fric Nasal w y ;

    FVow = a i u ạ ;
    Vow = FVow e ;

Rules 

"e:0 = word#"
e:0 <=> Vow t:n _ [ .#. | %= ] ; ! "Word final Vte -> e:0"

"e:a = e^a"
e:a <=> _ [ .#. | %= ] ; ! "Word final e:a"
    except
        Vow t:n _ [ .#. | %= ] ; ! "Word final Vte -> e:0"

"g:k = word#"
g:k <=> _ [ .#. | %= ] ; ! Word Final changes

"r:q = word#"
r:q <=> _ (%*:) [ .#. | %= ] ; ! Word Final changes

"t:n = WordFinalVte"
t:n <=> Vow _ e: [ .#. | %= ] ; ! Word final Vte

